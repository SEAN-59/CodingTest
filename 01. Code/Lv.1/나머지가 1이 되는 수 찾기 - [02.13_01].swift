import Foundation

/*
 제목: 나머지가 1이 되는 수 찾기
 난도: Lv.1 / 완료한 사람: 약 44,000명 / 정답률: 87%
 
 [문제]
 자연수 n이 매개변수로 주어집니다. n을 x로 나눈 나머지가 1이 되도록 하는 가장 작은 자연수 x를 return 하도록 solution 함수를 완성해주세요. 답이 항상 존재함은 증명될 수 있습니다.
 
 [제한]
 3 ≤ n ≤ 1,000,000
 
 [입출력 예]
 n    result
 10    3
 12    11
 */

func solution(_ n:Int) -> Int {
    for i in 2 ... Int(sqrt(Double(n-1))) { if (n-1) % i == 0 { return i } }
    return n-1
}

print("A = \(solution(12))")


/*
 [결과]
 정확성  테스트
 테스트 1 〉    통과 (0.03ms, 16.6MB)
 테스트 2 〉    통과 (0.02ms, 16.5MB)
 테스트 3 〉    통과 (0.01ms, 16.4MB)
 테스트 4 〉    통과 (0.01ms, 16.3MB)
 테스트 5 〉    통과 (0.02ms, 16MB)
 테스트 6 〉    통과 (0.01ms, 16.1MB)
 테스트 7 〉    통과 (0.01ms, 16.5MB)
 테스트 8 〉    통과 (0.02ms, 16.5MB)
 테스트 9 〉    통과 (0.02ms, 16.3MB)
 테스트 10 〉    통과 (0.01ms, 16.3MB)
 테스트 11 〉    통과 (0.02ms, 16.3MB)
 */

/*
 [해설]
 약수 중에서 1을 제외한 최소 약수를 찾으면 되는 문제였음
 */
