import Foundation

/*
 제목: 예산
 난도: Lv.1 / 완료한 사람: 약 39,000명 / 정답률: 75%
 기출문제: Summer/Winter Coding(~2018)
 
 [문제]
 S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다.
 그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다. 그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다.

 물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다. 
 예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수는 없습니다.

 부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 매개변수로 주어질 때, 최대 몇 개의 부서에 물품을 지원할 수 있는지 return 하도록 solution 함수를 완성해주세요.
 
 [제한]
 d는 부서별로 신청한 금액이 들어있는 배열이며, 길이(전체 부서의 개수)는 1 이상 100 이하입니다.
 d의 각 원소는 부서별로 신청한 금액을 나타내며, 부서별 신청 금액은 1 이상 100,000 이하의 자연수입니다.
 budget은 예산을 나타내며, 1 이상 10,000,000 이하의 자연수입니다.

 
 [입출력 예]
 d    budget    result
 [1,3,2,5,4]    9    3
 [2,2,3,3]    10    4
 */

func solution(_ d:[Int], _ budget:Int) -> Int {
    var result = 0
    var budget = budget
    let array = d.sorted()
    
    for i in 0 ..< array.count {
        if array[i] <= budget {
            if budget - array[i] >= 0 {
                budget -= array[i]
                result += 1
            }
            else { break }
        }
        else { break }
    }
    return result
}

print("A = \(solution([1,3,2,5,4], 9))")
print("A = \(solution([2,2,3,3], 10))")


/*
 [결과]
 정확성  테스트
 테스트 1 〉    통과 (0.09ms, 16.4MB)
 테스트 2 〉    통과 (0.14ms, 16.5MB)
 테스트 3 〉    통과 (0.08ms, 16.6MB)
 테스트 4 〉    통과 (0.10ms, 16.3MB)
 테스트 5 〉    통과 (0.10ms, 16.2MB)
 테스트 6 〉    통과 (0.10ms, 16.5MB)
 테스트 7 〉    통과 (0.27ms, 16.3MB)
 테스트 8 〉    통과 (0.28ms, 16.6MB)
 테스트 9 〉    통과 (0.29ms, 16.1MB)
 테스트 10 〉    통과 (0.51ms, 16.4MB)
 테스트 11 〉    통과 (0.27ms, 16.2MB)
 테스트 12 〉    통과 (0.25ms, 16.3MB)
 테스트 13 〉    통과 (0.26ms, 16.2MB)
 테스트 14 〉    통과 (0.25ms, 16.4MB)
 테스트 15 〉    통과 (0.28ms, 16.5MB)
 테스트 16 〉    통과 (0.31ms, 16.4MB)
 테스트 17 〉    통과 (0.23ms, 16.5MB)
 테스트 18 〉    통과 (0.48ms, 16.6MB)
 테스트 19 〉    통과 (0.36ms, 16.4MB)
 테스트 20 〉    통과 (0.10ms, 16.4MB)
 테스트 21 〉    통과 (0.11ms, 16.5MB)
 테스트 22 〉    통과 (0.11ms, 16.2MB)
 테스트 23 〉    통과 (0.11ms, 16.4MB)
 */

/*
 [해설]
 ..
 */
