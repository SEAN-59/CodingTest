import Foundation

/*
 제목: 예상 대진표
 난도: Lv.2 / 완료한 사람: 약 19,000명 / 정답률: 68%
 기출문제: 2017 팁스타운
 
 [문제]
 △△ 게임대회가 개최되었습니다. 
 이 대회는 N명이 참가하고, 토너먼트 형식으로 진행됩니다.
 N명의 참가자는 각각 1부터 N번을 차례대로 배정받습니다. 그리고, 1번↔2번, 3번↔4번, ... , N-1번↔N번의 참가자끼리 게임을 진행합니다.
 각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있습니다.
 이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받습니다.
 만약 1번↔2번 끼리 겨루는 게임에서 2번이 승리했다면 다음 라운드에서 1번을 부여받고,
 3번↔4번에서 겨루는 게임에서 3번이 승리했다면 다음 라운드에서 2번을 부여받게 됩니다.
 게임은 최종 한 명이 남을 때까지 진행됩니다.

 이때, 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌습니다. 
 게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의 매개변수로 주어질 때,
 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 return 하는 solution 함수를 완성해 주세요.
 단, A번 참가자와 B번 참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정합니다.

 [제한]
 N : 21 이상 220 이하인 자연수 (2의 지수 승으로 주어지므로 부전승은 발생하지 않습니다.)
 A, B : N 이하인 자연수 (단, A ≠ B 입니다.)
 
 [입출력 예]
 N    A    B    answer
 8    4    7    3
 
 1,2 | 3,4(A) | 5,6 | 7(B),8
 1, 2(A) | 3, 4(B)
 1(A), 2(B)
 
 16, 5, 12
 1,2 / 3,4 / 5(a),6 / 7,8 / 9,10 / 11,12(b) / 13,14 / 15,16 -> 몇번째 팀인지 구하는건 = n/2 + n%2 > 이게 팀 번호
 12/34/56/78
 12/34
 1/2
 
 
 */


func solution(_ n:Int, _ a:Int, _ b:Int) -> Int {
    var result = 0
    var team = ((a/2)+(a%2), (b/2)+(b%2))
    for i in 1 ... n/2 {
        if team.0 == team.1 { 
            result = i
            break
        }
        else { team = ((team.0/2)+(team.0%2), (team.1/2)+(team.1%2))}
    }

    return result
}

print("A = \(solution(16,5,12))")

/*
 [결과]
 정확성  테스트
 테스트 1 〉    통과 (0.01ms, 16.4MB)
 테스트 2 〉    통과 (0.01ms, 16.3MB)
 테스트 3 〉    통과 (0.01ms, 16.1MB)
 테스트 4 〉    통과 (0.01ms, 16.2MB)
 테스트 5 〉    통과 (0.01ms, 16.3MB)
 테스트 6 〉    통과 (0.01ms, 16.2MB)
 테스트 7 〉    통과 (0.01ms, 16.3MB)
 테스트 8 〉    통과 (0.01ms, 16.4MB)
 테스트 9 〉    통과 (0.01ms, 16.3MB)
 테스트 10 〉    통과 (0.01ms, 16.2MB)
 테스트 11 〉    통과 (0.01ms, 16.3MB)
 테스트 12 〉    통과 (0.01ms, 16.5MB)
 테스트 13 〉    통과 (0.01ms, 16.3MB)
 테스트 14 〉    통과 (0.01ms, 16.3MB)
 테스트 15 〉    통과 (0.01ms, 16.5MB)
 테스트 16 〉    통과 (0.01ms, 16.3MB)
 테스트 17 〉    통과 (0.01ms, 16.4MB)
 테스트 18 〉    통과 (0.01ms, 16.2MB)
 테스트 19 〉    통과 (0.01ms, 16.2MB)
 테스트 20 〉    통과 (0.01ms, 16.3MB)
 테스트 21 〉    통과 (0.01ms, 16.1MB)
 테스트 22 〉    통과 (0.01ms, 16.2MB)
 테스트 23 〉    통과 (0.01ms, 16.5MB)
 테스트 24 〉    통과 (0.01ms, 16.2MB)
 테스트 25 〉    통과 (0.01ms, 16.2MB)
 테스트 26 〉    통과 (0.01ms, 16.1MB)
 테스트 27 〉    통과 (0.01ms, 16.3MB)
 테스트 28 〉    통과 (0.01ms, 16.5MB)
 테스트 29 〉    통과 (0.01ms, 16.3MB)
 테스트 30 〉    통과 (0.01ms, 16.3MB)
 테스트 31 〉    통과 (0.01ms, 16.3MB)
 테스트 32 〉    통과 (0.01ms, 16.4MB)
 테스트 33 〉    통과 (0.01ms, 16.3MB)
 테스트 34 〉    통과 (0.01ms, 16.3MB)
 */

/*
 [해설]
 문제 내부의 계산식을 잘 파악하는게 중요한것 같음
 시간이 들더라도 바로 코드를 짜는게 아니라 내부의 계산을 이해하는게 중요할것 같음
 */
